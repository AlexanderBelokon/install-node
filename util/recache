#!/bin/bash
set -e

# check version of install-node
install_v=$(node -e "console.log(($(cat $(dirname $0)/../package.json)).version.split('.')[0])")

main_file="$(dirname $0)/../bin/install_node"
version_file="$(dirname $0)/../cache/v${install_v}/node-versions"
versions=( $(cat "$version_file") )
dest="s3://mapbox/vendor/nodejs"
apps_dest="s3://mapbox/apps/install-node"
tmp=$(mktemp -d -t install-node.XXXXXX)
gitsha=$(cd $(dirname $0)  && git rev-parse HEAD)

function cachefile() {
    local filename=$1
    local localname=$(echo $1 | tr '/' '-')
    local nv=$2

    if wget -q -O $localname "http://nodejs.org/dist/v$nv/$filename"; then
        md5sum "$localname" > "$localname.md5"
    else
        echo "$filename not found at http://nodejs.org/dist/v$nv/$filename" && return 0
    fi

    # RHEL/centos7 does not ship with a parent shasum function.
    # Fallback to sha1sum if not found.
    shasum=""
    if which shasum > /dev/null; then
        shasum=$(which shasum)
    elif which sha1sum > /dev/null; then
        shasum=$(which sha1sum)
    fi

    # Check that shasum of tarball is present
    echo "Verifying nodejs shasum"
    if [ ! -z $(echo "$SHASUMFILE" | grep 256) ]; then
        node_shasum="$($shasum -a 256 $localname | grep -oE '^[0-9a-f]+')"
    else
        node_shasum="$($shasum $localname | grep -oE '^[0-9a-f]+')"
    fi
    grep "$node_shasum" "$SHASUMFILE"

    # Check if file already exists on s3
    if aws s3 cp "$dest/v$nv/$filename.md5" "./$localname-online.md5" > /dev/null 2>&1; then
        if md5sum -c $localname-online.md5; then
            echo "$filename unchanged"
            return 0
        fi
    fi

    aws s3 cp --acl public-read "$localname"      "$dest/v$nv/$filename"
    aws s3 cp --acl public-read "$localname.md5"  "$dest/v$nv/$filename.md5"
}

# Add trusted gpg keys for verifying nodejs downloads
if which gpg > /dev/null; then
    echo "Adding legacy trusted keys from pgp.mit.edu"
    gpg -q --keyserver pgp.mit.edu --recv-keys 6C481CF6 && gpg --export --armor 6C481CF6 > "$tmp/izs.asc"
    gpg -q --keyserver pgp.mit.edu --recv-keys 0246406D && gpg --export --armor 0246406D > "$tmp/tjfontaine.asc"
    gpg -q --keyserver pgp.mit.edu --recv-keys 888C628D && gpg --export --armor 888C628D > "$tmp/jgilli.asc"
    gpg -q --keyserver pgp.mit.edu --recv-keys 7D83545D && gpg --export --armor 7D83545D > "$tmp/rvagg.asc"
    gpg -q --keyserver pgp.mit.edu --recv-keys 813DAE8E && gpg --export --armor 813DAE8E > "$tmp/jsenkpiel.asc"
    gpg -q --keyserver pgp.mit.edu --recv-keys 070877AC && gpg --export --armor 070877AC > "$tmp/jsnell.asc"

    echo "Adding trusted keys from pool.sks-keyservers.net"
    gpg -q --keyserver pool.sks-keyservers.net --recv-keys 9554F04D7259F04124DE6B476D5A82AC7E37093B
    gpg --export --armor 9554F04D7259F04124DE6B476D5A82AC7E37093B > "$tmp/cdickinson.asc"
    gpg -q --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5
    gpg --export --armor 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 > "$tmp/cihrig.asc"
    gpg -q --keyserver pool.sks-keyservers.net --recv-keys 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93
    gpg --export --armor 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 > "$tmp/sroberts.asc"
    gpg -q --keyserver pool.sks-keyservers.net --recv-keys FD3A5288F042B6850C66B31F09FE44734EB7990E
    gpg --export --armor FD3A5288F042B6850C66B31F09FE44734EB7990E > "$tmp/jsenkpiel.asc"
    gpg -q --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1
    gpg --export --armor 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 > "$tmp/jsnell2.asc"
    #gpg -q -keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
    #gpg --export --armor DD8F2338BAE7501E3DD5AC78C273792F7D83545D > "$tmp/rvagg.asc"
    gpg -q --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8
    gpg --export --armor C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 > "$tmp/mborins.asc"
    gpg -q --keyserver pool.sks-keyservers.net --recv-keys B9AE9905FFD7803F25714661B63B535A4C206CA9
    gpg --export --armor B9AE9905FFD7803F25714661B63B535A4C206CA9 > "$tmp/elucas.asc"

    gpg --import "$tmp/izs.asc"
    gpg --import "$tmp/tjfontaine.asc"
    gpg --import "$tmp/jgilli.asc"
    gpg --import "$tmp/rvagg.asc"
    gpg --import "$tmp/jsenkpiel.asc"
    gpg --import "$tmp/jsnell.asc"
    gpg --import "$tmp/cdickinson.asc"
    gpg --import "$tmp/cihrig.asc"
    gpg --import "$tmp/sroberts.asc"
    gpg --import "$tmp/jsenkpiel.asc"
    gpg --import "$tmp/jsnell2.asc"
    gpg --import "$tmp/mborins.asc"
    gpg --import "$tmp/elucas.asc"

else
    echo "!WARN! gpg not found. Please install and try again" && exit 1
fi

aws s3 cp --acl public-read "$main_file"           $apps_dest/$gitsha/run
aws s3 cp --acl public-read "$tmp/izs.asc"         $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/tjfontaine.asc"  $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/jgilli.asc"      $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/rvagg.asc"       $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/jsenkpiel.asc"   $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/jsnell.asc"      $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/cdickinson.asc"  $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/cihrig.asc"      $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/sroberts.asc"    $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/jsenkpiel.asc"   $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/jsnell2.asc"     $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/mborins.asc"     $apps_dest/cache/
aws s3 cp --acl public-read "$tmp/elucas.asc"      $apps_dest/cache/
aws s3 cp --acl public-read "$version_file"        $apps_dest/cache/v${install_v}/

if git describe --tags --exact-match 2> /dev/null; then
    tag=$(git describe --tags --exact-match)
    aws s3 cp --acl public-read "$main_file" $apps_dest/$tag/run
fi

cd "$tmp"

# Cache node.js packages to S3
for nv in "${versions[@]}"; do
    echo "Caching Node.js v$nv to S3"

    # Verify signed SHASUMS file to ensure it can be trusted
    # Versions after 4.0.0 use shasum's 256 algorithm, check for both
    SHASUMFILE="SHASUMS.txt.asc"
    if ! wget -q -O $SHASUMFILE "http://nodejs.org/dist/v$nv/$SHASUMFILE"; then
        echo "$SHASUMFILE not found" && rm $SHASUMFILE
        SHASUMFILE="SHASUMS256.txt.asc"
        if ! wget -q -O $SHASUMFILE "http://nodejs.org/dist/v$nv/$SHASUMFILE"; then
            echo "$SHASUMFILE not found. No SHASUM file found for v$nv, exiting." && exit 1
        fi
    fi

    echo "Verifying signature of nodejs SHASUMS.txt.asc"
    gpg --verify < $SHASUMFILE

    cachefile node-v$nv-linux-x64.tar.gz $nv
    cachefile node-v$nv-darwin-x64.tar.gz $nv
    # windows builds - versions after 4.0.0 live at a different path, check for both
    cachefile node.exe $nv
    cachefile win-x86/node.exe $nv
    cachefile x64/node.exe $nv
    cachefile win-x64/node.exe $nv

    rm ./*
done
