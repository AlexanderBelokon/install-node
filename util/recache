#!/bin/bash
set -e

main="$(dirname $0)/../bin/install_node"
versions=( $(cat "$(dirname $0)/../cache/node-versions") )
dest="s3://mapbox/vendor/nodejs"
apps_dest="s3://mapbox/apps/install-node"
tmp=$(mktemp -d -t install-node.XXXXXX)
gitsha=$(cd $(dirname $0)  && git rev-parse HEAD)

function cachefile() {
    local filename=$1
    local nv=$2

    wget -q "http://nodejs.org/dist/v$nv/$filename"
    md5sum "$filename" > "$filename.md5"

    if aws s3 cp "$dest/v$nv/$filename.md5" "./$filename-online.md5" > /dev/null 2>&1; then
        if md5sum -c $filename-online.md5; then
            echo "$filename unchanged"
            return 0
        fi
    fi

    aws s3 cp --acl public-read "$filename"      "$dest/v$nv/"
    aws s3 cp --acl public-read "$filename.md5"  "$dest/v$nv/"
}

# Cache app to S3
gpg -q --keyserver pgp.mit.edu --recv-keys 6C481CF6 && gpg --export --armor 6C481CF6 > "$tmp/izs.asc"
gpg -q --keyserver pgp.mit.edu --recv-keys 0246406D && gpg --export --armor 0246406D > "$tmp/tjfontaine.asc"

aws s3 cp --acl public-read "$main"                $apps_dest/$gitsha/run
aws s3 cp --acl public-read "$tmp/izs.asc"         $apps_dest/$gitsha/cache/izs.asc
aws s3 cp --acl public-read "$tmp/tjfontaine.asc"  $apps_dest/$gitsha/cache/tjfontaine.asc

if git describe --tags --exact-match 2> /dev/null; then
    tag=$(git describe --tags --exact-match)
    aws s3 cp --acl public-read "$main"                $apps_dest/$tag/run
    aws s3 cp --acl public-read "$tmp/izs.asc"         $apps_dest/$tag/cache/izs.asc
    aws s3 cp --acl public-read "$tmp/tjfontaine.asc"  $apps_dest/$tag/cache/tjfontaine.asc
fi

cd "$tmp"

# Cache node.js packages to S3
for nv in "${versions[@]}"; do
    echo "Caching Node.js v$nv to S3"

    # cachefile SHASUMS.txt.asc $nv
    # cachefile node-v$nv-linux-x64.tar.gz $nv
    # cachefile node-v$nv-darwin-x64.tar.gz $nv
    # cachefile node.exe $nv

    rm ./*
done
