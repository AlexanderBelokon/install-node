#!/bin/bash

set -eu
if [ -z "${NV+1}" -o -z "${NP+1}" -o -z "${OD+1}" ]; then
    node_version=$1
    platform=$2
    output_dir=$3
else
    node_version=$NV
    platform=$NP
    output_dir=$OD
fi

# Output info about requested range and resolved node version
echo "Requested node version: $node_version"
echo "Requested node platform: $platform"

case $platform in
    "linux")
        url="https://s3.amazonaws.com/mapbox/vendor/nodejs/v$node_version/node-v$node_version-linux-x64.tar.gz"
        ;;
    "darwin")
        url="https://s3.amazonaws.com/mapbox/vendor/nodejs/v$node_version/node-v$node_version-darwin-x64.tar.gz"
        ;;
    "win32")
        url="https://s3.amazonaws.com/mapbox/vendor/nodejs/v$node_version/node.exe"
        ;;
    *)
        echo "Not a valid platform. Specify one of linux, darwin or win32"
        exit 1
        ;;
esac

tmp="$(mktemp -d -t install-node.XXXXXX)"
trap "rm -rf $tmp" EXIT

cd "$tmp"

wget --no-verbose "https://s3.amazonaws.com/mapbox/apps/install-node/cache/izs.asc"
wget --no-verbose "https://s3.amazonaws.com/mapbox/apps/install-node/cache/tjfontaine.asc"
wget --no-verbose "$url"
wget --no-verbose "http://nodejs.org/dist/v$node_version/SHASUMS.txt.asc"

# Add trusted gpg keys for verifying nodejs downloads
gpg --import izs.asc
gpg --import tjfontaine.asc

# Verify signed SHASUMS file to ensure it can be trusted
echo "Verifying signature of nodejs SHASUMS.txt.asc"
gpg --verify < "SHASUMS.txt.asc"

# Check that shasum of tarball is present
echo "Verifying nodejs shasum"
node_shasum="$(shasum $(basename $url) | grep -oE '^[0-9a-f]+')"
grep "$node_shasum" "SHASUMS.txt.asc"

if [ "$platform" != "win32" ]; then
    tar --strip-components 1 -xzf "node-v$node_version-$platform-x64.tar.gz" --directory "$output_dir"
else
    cp node.exe "$output_dir/"
fi
